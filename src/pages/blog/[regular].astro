---
import BackToPrev from "@/components/BackToPrev.astro";
import Container from "@/components/Container.astro";
import FormattedDate from "@/components/FormattedDate.astro";
import Base from "@/layouts/Base.astro";
import { filterDrafts } from "@/lib/content";
import { markdownify } from "@/lib/textConverter";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { getCollection, render } from "astro:content";

export async function getStaticPaths() {
  const posts = filterDrafts(await getCollection("blog"));

  const paths = posts.map((post) => ({
    params: {
      regular: post.id,
    },
    props: { post },
  }));
  return paths;
}

interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;
const { title, description, image, date, draft } = post.data;
const { Content } = await render(post);
---

<Base
  title={title}
  description={description}
  og={new URL(`/og/${post.id}.jpg`, Astro.site).toString()}
>
  <Container>
    <div class="animate">
      <BackToPrev href="/blog">Back to blog</BackToPrev>
    </div>
    <div class="space-y-1 my-10">
      <div class="animate flex items-center gap-1.5">
        <div class="text-sm">
          <FormattedDate date={date} />
        </div>
        {
          draft && (
            <div class="text-sm text-red-500 border border-red-500 rounded-lg px-2 py-0.5">
              Draft
            </div>
          )
        }
      </div>

      <h1
        set:html={markdownify(title)}
        class="animate text-2xl font-semibold text-black dark:text-white"
      />
    </div>

    {
      image && (
        <div class="animate mt-8 mb-2">
          <Image
            src={image}
            height={500}
            width={1000}
            alt={title}
            class="rounded-lg"
          />
        </div>
      )
    }

    <article class="animate content mb-16">
      <Content />
    </article>
  </Container>
</Base>
