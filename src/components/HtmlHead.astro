---
import config from "@/config";
import { plainify } from "@/lib/textConverter";
import { ClientRouter } from "astro:transitions";
import { SEO } from "astro-seo";
import "@/styles/global.css";

interface Props {
  title: string;
  description: string;
  image?: string;
  noindex?: boolean;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image, noindex } = Astro.props;
const plainifyTitle = plainify(title);
const plainifyDescription = plainify(description);
---

<head>
  <SEO
    charset="utf-8"
    title={plainifyTitle}
    description={plainifyDescription}
    canonical={canonicalURL}
    nofollow={noindex}
    noindex={noindex}
    openGraph={{
      basic: {
        type: "website",
        title: plainifyTitle,
        url: Astro.url,
        image: image ?? "",
      },
      optional: {
        description: plainifyDescription,
        siteName: config.site.title,
      },
      article: {
        authors: [config.metadata.meta_author],
      },
    }}
    twitter={{
      card: "summary_large_image",
      creator: config.metadata.meta_author,
      title: plainifyTitle,
      description: plainifyDescription,
      image: image ?? "",
    }}
    extend={{
      link: [
        {
          rel: "icon",
          type: "image/x-icon",
          href: config.site.favicon,
        },
        {
          rel: "icon",
          type: "image/svg+xml",
          href: config.site.favicon_dark,
          media: "(prefers-color-scheme: dark)",
        },
        {
          rel: "icon",
          type: "image/svg+xml",
          href: config.site.favicon,
          media: "(prefers-color-scheme: light)",
        },
        {
          rel: "preconnect",
          href: "https://fonts.googleapis.com",
        },
        {
          rel: "preconnect",
          href: "https://fonts.gstatic.com",
          crossorigin: "anonymous",
        },
        {
          rel: "stylesheet",
          href: "https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&display=swap",
        },
        {
          rel: "alternate",
          type: "application/rss+xml",
          title: config.site.title,
          href: new URL("rss.xml", Astro.site).toString(),
        },
        {
          rel: "sitemap",
          href: new URL("sitemap-index.xml", Astro.site).toString(),
        },
      ],
      meta: [
        {
          name: "viewport",
          content: "width=device-width,initial-scale=1",
        },
        {
          name: "generator",
          content: Astro.generator,
        },
        {
          name: "author",
          content: config.metadata.meta_author,
        },
      ],
    }}
  />

  <ClientRouter />

  <script is:inline>
    function init() {
      preloadTheme();
      preloadFont();
      onScroll();
      animate();

      document.addEventListener("scroll", onScroll);
    }

    function animate() {
      const animateElements = document.querySelectorAll(".animate");

      animateElements.forEach((element, index) => {
        setTimeout(() => {
          element.classList.add("show");
        }, index * 150);
      });
    }

    function onScroll() {
      if (window.scrollY > 0) {
        document.documentElement.classList.add("scrolled");
      } else {
        document.documentElement.classList.remove("scrolled");
      }
    }

    function toggleTheme(dark) {
      const css = document.createElement("style");

      css.appendChild(
        document.createTextNode(
          `* {
             -webkit-transition: none !important;
             -moz-transition: none !important;
             -o-transition: none !important;
             -ms-transition: none !important;
             transition: none !important;
          }
        `,
        ),
      );

      document.head.appendChild(css);

      if (dark) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }

      window.getComputedStyle(css).opacity;
      document.head.removeChild(css);
    }

    function preloadTheme() {
      const userTheme = localStorage.getItem("theme");

      if (userTheme === "light" || userTheme === "dark") {
        toggleTheme(userTheme === "dark");
      } else {
        toggleTheme(window.matchMedia("(prefers-color-scheme: dark)").matches);
      }
    }

    function removeFont() {
      const link = document.getElementById("cjk-font");
      if (link) {
        link.remove();
      }
    }

    /**
     * @param {'Huninn' | 'Iansui'} font
     */
    function addFont(font) {
      const url = `https://fonts.googleapis.com/css2?family=${font}&display=swap`;
      const link = document.createElement("link");
      link.id = `cjk-font`;
      link.href = url;
      link.rel = "stylesheet";
      document.head.appendChild(link);
    }

    /**
     * @param {'iansui' | 'huninn'} font
     */
    function toggleFont(font) {
      if (font === "iansui") {
        removeFont();
        addFont("Iansui");
        document.documentElement.classList.remove("huninn");
      } else {
        removeFont();
        addFont("Huninn");
        document.documentElement.classList.add("huninn");
      }
    }

    function preloadFont() {
      const userFont = localStorage.getItem("font");
      if (userFont) {
        toggleFont(userFont);
      }
    }

    document.addEventListener("DOMContentLoaded", () => init());
    document.addEventListener("astro:after-swap", () => init());
    preloadTheme();
    preloadFont();
  </script>
</head>
